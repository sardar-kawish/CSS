<!-- About CSS
CSS:
which stands for Cascading Style Sheets, is a stylesheet language used for describing 
the presentation and layout of HTML documents. 
It allows web developers to control the appearance and design of web pages, 
including aspects like colors, fonts, spacing, and positioning. 
Here are some key concepts and components of CSS:

Selectors:
CSS selectors are used to target HTML elements that you want to style.
Selectors can be based on element names, classes, IDs, attributes, and more.
For example:
Element Selector: 

p targets all <p> elements.

Class Selector:
.my-class targets elements with the class="my-class" attribute.

ID Selector:
#my-id targets the element with id="my-id".

Attribute Selector: 
[type="text"] targets elements with type="text".

Properties and Values:
 CSS properties are used to specify what aspect of an element you want to style,
  and values determine how you want to style it. 

For example:
Property:
 color sets the text color.

Value:
 red sets the text color to red.

Declaration Blocks:
 CSS rules are created by grouping properties and values together in a declaration block.
  Each declaration is separated by a semicolon, 
  and the entire block is enclosed in curly braces. 

For example:
css
 code
selector {
    property1: value1;
    property2: value2;
}

External CSS: 
CSS can be included in a separate external stylesheet file 
(usually with a .css extension) and 
linked to an HTML document using the <link> element in the document's <head> section.
html
 code
<link rel="stylesheet" type="text/css" href="styles.css">

Internal CSS: 
CSS can also be included directly within an HTML document using 
the <style> element in the document's <head> section.
html
 code
<style>
    /* CSS rules go here */
</style>

Inline CSS: 
Inline CSS is applied directly to individual HTML elements using the style attribute.
This takes precedence over external and internal styles.
html
code
<p style="color: blue;">This is a blue text.</p>

Selectors and Specificity: 
CSS rules are applied based on specificity, 
where more specific selectors take precedence over less specific ones. 
Specificity is determined by the type of selector used and the number of them. 
For example, 
an ID selector (#my-id) is more specific than a class selector (.my-class).

Cascading: 
The "C" in CSS stands for "Cascading,"
 which means that when conflicting styles are applied to an element, 
the most specific rule wins. 
This allows you to define global styles and override them for specific elements.

Box Model:
 In CSS, elements are represented as boxes with content, padding, borders, and margins. 
 The box model defines how these components are sized and positioned relative to each other.

Flexbox and Grid: 
CSS offers layout techniques like Flexbox and Grid for creating responsive and
 flexible page layouts. 
Flexbox is designed for one-dimensional layouts, 
while Grid is for two-dimensional layouts.

Media Queries:
 Media queries allow you to apply different styles based on 
 the characteristics of the device or viewport,
such as screen size, resolution, or orientation.
This is crucial for creating responsive web designs.

Transitions and Animations: 
CSS can be used to create smooth transitions and animations for elements,
 enhancing user experience.

Vendor Prefixes:
 To ensure compatibility with various browsers, some CSS properties require vendor prefixes.
 For example:
 webkit- for  Chrome and Safari
or -moz- for Firefox. -->